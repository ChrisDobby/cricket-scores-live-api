service: cricket-scorer

provider:
    name: aws
    runtime: nodejs8.10
    region: eu-west-2
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:*
          Resource: '*'
        - Effect: Allow
          Action:
              - SNS:Publish
          Resource: '*'

package:
    individually: true

plugins:
    - serverless-websockets-plugin

websocketApiName: websocket-updates-${self:provider.stage}
websocketApiRouteSelectionExpression: $request.body.action

functions:
    get-matches:
        handler: getMatches.handler
        events:
            - http:
                  path: match
                  method: get
                  cors: true
        package:
            artifact: ./lambdas-dist/get-matches/get-matches.zip

    get-match:
        handler: getMatch.handler
        events:
            - http:
                  path: match/{id}
                  method: get
                  cors: true
        package:
            artifact: ./lambdas-dist/get-match/get-match.zip

    authoriser:
        handler: index.handler
        package:
            artifact: ./lambdas-dist/authoriser/authoriser.zip

    add-match:
        handler: addMatch.handler
        events:
            - http:
                  path: match
                  method: post
                  cors: true
                  authorizer: authoriser
        package:
            artifact: ./lambdas-dist/add-match/add-match.zip

    put-match:
        handler: putMatch.handler
        events:
            - http:
                  path: match/{id}
                  method: put
                  cors: true
                  authorizer: authoriser
        package:
            artifact: ./lambdas-dist/put-match/put-match.zip

    delete-match:
        handler: deleteMatch.handler
        events:
            - http:
                  path: match/{id}
                  method: delete
                  cors: true
                  authorizer: authoriser
        package:
            artifact: ./lambdas-dist/delete-match/delete-match.zip

    get-teams:
        handler: getTeams.handler
        events:
            - http:
                  path: user/teams
                  method: get
                  cors: true
        package:
            artifact: ./lambdas-dist/get-teams/get-teams.zip

    on-connect:
        handler: index.onConnect
        events:
            - websocket:
                  route: $connect
                  routeKey: $connect
        package:
            artifact: ./lambdas-dist/sockets/sockets.zip

    on-disconnect:
        handler: index.onDisconnect
        events:
            - websocket:
                  route: $disconnect
                  routeKey: $disconnect
        package:
            artifact: ./lambdas-dist/sockets/sockets.zip

    on-matchid:
        handler: index.onMatchId
        events:
            - websocket:
                  route: matchid
                  routeKey: matchid
        package:
            artifact: ./lambdas-dist/sockets/sockets.zip

    on-matchids:
        handler: index.onMatchIds
        events:
            - websocket:
                  route: matchids
                  routeKey: matchids
        package:
            artifact: ./lambdas-dist/sockets/sockets.zip

    match-updates:
        handler: matchUpdates.handler
        events:
            - sns: match-update
        package:
            artifact: ./lambdas-dist/match-updates/match-updates.zip

resources:
    Resources:
        DynamoDbMatches:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: cricket-scores-matches
                AttributeDefinitions:
                    - AttributeName: id
                      AttributeType: S
                    - AttributeName: userId
                      AttributeType: S
                    - AttributeName: complete
                      AttributeType: S
                    - AttributeName: userId__complete
                      AttributeType: S
                    - AttributeName: matchDate
                      AttributeType: N
                KeySchema:
                    - AttributeName: id
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5
                GlobalSecondaryIndexes:
                    - IndexName: userIndex
                      KeySchema:
                          - AttributeName: userId
                            KeyType: HASH
                          - AttributeName: matchDate
                            KeyType: RANGE
                      Projection:
                          ProjectionType: ALL
                      ProvisionedThroughput:
                          ReadCapacityUnits: 5
                          WriteCapacityUnits: 5
                    - IndexName: completeIndex
                      KeySchema:
                          - AttributeName: complete
                            KeyType: HASH
                          - AttributeName: matchDate
                            KeyType: RANGE
                      Projection:
                          ProjectionType: ALL
                      ProvisionedThroughput:
                          ReadCapacityUnits: 5
                          WriteCapacityUnits: 5
                    - IndexName: userCompleteIndex
                      KeySchema:
                          - AttributeName: userId__complete
                            KeyType: HASH
                          - AttributeName: matchDate
                            KeyType: RANGE
                      Projection:
                          ProjectionType: ALL
                      ProvisionedThroughput:
                          ReadCapacityUnits: 5
                          WriteCapacityUnits: 5
        DynamoDbUserTeams:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: cricket-scores-user-teams
                AttributeDefinitions:
                    - AttributeName: userId
                      AttributeType: S
                KeySchema:
                    - AttributeName: userId
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5
        DynamoDbConnections:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: cricket-scores-connections
                AttributeDefinitions:
                    - AttributeName: connectionId
                      AttributeType: S
                    - AttributeName: matchId
                      AttributeType: S
                KeySchema:
                    - AttributeName: connectionId
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 5
                    WriteCapacityUnits: 5
                GlobalSecondaryIndexes:
                    - IndexName: matchIndex
                      KeySchema:
                          - AttributeName: matchId
                            KeyType: HASH
                      Projection:
                          ProjectionType: ALL
                      ProvisionedThroughput:
                          ReadCapacityUnits: 5
                          WriteCapacityUnits: 5
